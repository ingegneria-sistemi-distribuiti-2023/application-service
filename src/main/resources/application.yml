spring:
  datasource:
    url: ${JDBC_DATABASE_URL:jdbc:mysql://localhost:3306/applicationdb?allowPublicKeyRetrieval=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC}
    username: ${JDBC_DATABASE_USERNAME:root}
    password: ${JDBC_DATABASE_PASSWORD:administrator}
    dbcp2:
      max-wait-millis: 30000
      validation-query: SELECT 1
      validation-query-timeout: 30
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: none
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        id:
          new_generator_mappings: true
server:
  port: 8080

auth:
  service:
    url: ${AUTHENTICATION_SERVICE_URL:http://localhost:8082}
    secret: pluto

game:
  service:
    url: ${GAME_SERVICE_URL:http://localhost:8081}
    secret: paperino

session:
  service:
    url: ${SESSION_SERVICE_URL:http://localhost:8084}
    secret: pippo

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health # expose health endpoint
  endpoint:
    health:
      show-details: always # show details of health endpoint

resilience4j:
  circuitbreaker:
    circuit-breaker-aspect-order: 1 # the order of the circuit breaker aspect, in this way it will be executed before the retry aspect
    instances:
      circuitBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50 # if more than 50% of the calls fail, the circuit will be open
        minimumNumberOfCalls: 3 # if less than 3 calls are recorded, the circuit will not be open
        automaticTransitionFromOpenToHalfOpenEnabled: true # if the circuit is open, it will be half open after 5 seconds
        waitDurationInOpenState: 5s # the time the circuit will be half open
        permittedNumberOfCallsInHalfOpenState: 3 # the number of calls that will be allowed in half open state
        slidingWindowSize: 10 # the number of calls that will be recorded
        slidingWindowType: COUNT_BASED # the type of the sliding window

  retry:
    retry-aspect-order: 2 # the order of the retry aspect, in this way it will be executed before the circuit breaker aspect
    instances:
      retryService:
        maxAttempts: 3 # the number of retries
        waitDuration: 5s # the time between retries